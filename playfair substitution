#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 5 

void generatePlayfairMatrix(char key[], char matrix[][SIZE]) {
    int i, j, k, flag = 0, *used;

    used = (int *)calloc(26, sizeof(int));

    for (i = 0; i < SIZE; i++) {
        for (j = 0; j < SIZE; j++) {
            matrix[i][j] = ' ';
        }
    }

    for (i = 0; i < SIZE; i++) {
        for (j = 0; j < SIZE; j++) {
            if (key[flag] == 'J')
                key[flag] = 'I';
            for (k = 0; k < SIZE; k++) {
                if (used[key[flag] - 65] == 0) {
                    matrix[i][j] = key[flag];
                    used[key[flag] - 65] = 1;
                    break;
                } else {
                    flag++;
                    if (flag >= strlen(key))
                        flag = 0;
                }
            }
            flag++;
        }
    }
}

void playfairEncrypt(char message[], char matrix[][SIZE]) {
    int i, row1, row2, col1, col2;

    for (i = 0; i < strlen(message); i += 2) {
        if (message[i + 1] == '\0') {
            message[i + 1] = 'X';
            message[i + 2] = '\0';
        }
        row1 = strchr(matrix, message[i]) - matrix[0];
        col1 = strchr(matrix[row1], message[i]) - matrix[row1];

        row2 = strchr(matrix, message[i + 1]) - matrix[0];
        col2 = strchr(matrix[row2], message[i + 1]) - matrix[row2];

        if (row1 == row2) {
            col1 = (col1 + 1) % SIZE;
            col2 = (col2 + 1) % SIZE;
        } else if (col1 == col2) {
            row1 = (row1 + 1) % SIZE;
            row2 = (row2 + 1) % SIZE;
        } else {
            int temp = col1;
            col1 = col2;
            col2 = temp;
        }

        message[i] = matrix[row1][col1];
        message[i + 1] = matrix[row2][col2];
    }
}

int main() {
    char key[26], matrix[SIZE][SIZE], message[100];

    printf("Enter the key (uppercase letters, no repeating letters): ");
    scanf("%s", key);

    printf("Enter the message to encrypt (uppercase letters): ");
    scanf("%s", message);

    generatePlayfairMatrix(key, matrix);
    playfairEncrypt(message, matrix);

    printf("Encrypted message: %s\n", message);

    return 0;
}
